<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	">
	
	<!-- 1.扫描注解标注类 -->
	<context:component-scan base-package="com.dao,com.service"></context:component-scan>
	
	
	<!--start  通过属性文件来配置数据源 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:database.properties</value>
		</property>
	</bean>
	<!-- 1.配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="initialSize" value="${initialSize}"></property>
		<property name="maxActive" value="${maxActive}"></property>
		
		<property name="maxIdle" value="${maxIdle}"></property>
		<property name="minIdle"  value="${minIdle}"></property>
		<property name="maxWait"  value="${maxWait}"></property>
		<property name="removeAbandoned"  value="${removeAbandoned}"></property>
		<property name="removeAbandonedTimeout"  value="${removeAbandonedTimeout}"></property>
		
		<!-- sql心跳-->
		<property name="testWhileIdle"  value="true"></property>
		<property name="testOnBorrow"  value="false"></property>
		<property name="testOnReturn"  value="false"></property>
		<property name="validationQuery"  value="select 1"></property>
		<property name="timeBetweenEvictionRunsMillis"  value="60000"></property>
		<property name="numTestsPerEvictionRun"  value="${maxActive}"></property>
	</bean>
	<!-- end 结束 -->

	
	<!-- 2.配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		
		<!-- 映射文件 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/dao/**/*.xml</value>
			</list>
		</property>
	</bean>
	

	<!-- 4.采用数据映射器（MapperScannerConfigurer）的方式完成对数据库操作  dao实现类可以省略
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dao"></property>
	</bean>
	

	<!-- 为业务逻辑层配置事务-->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 事务使用注解的时候需要加上 tx:annotation-driven -->
	<!--<tx:annotation-driven transaction-manager="txManager"/>--><!-- 启用事务注解 -->
	
	<!-- 通过tx:advice 配置事务增强 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!--定义属性，声明事务规则-->
		<tx:attributes>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="get*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.service..*.*(..))" id="pointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
	</aop:config>
	
</beans>